@import '~@angular/material/theming';
@import 'app/widgets/SearchBar';

@include mat-core();

// Define the default theme (same as the example above).
$primary: mat-palette($mat-blue);
$accent: mat-palette($mat-teal);
$theme: mat-light-theme($primary, $accent);

// Include the default theme styles.
@include angular-material-theme($theme);

// Define an alternate dark theme.
$dark-primary: mat-palette($mat-deep-orange);
$dark-accent: mat-palette($mat-amber, A200, A100, A400);
$dark-warn: mat-palette($mat-red);

$dark-theme: mat-dark-theme($dark-primary, $dark-accent, $dark-warn);

// Include the alternative theme styles inside of a block with a CSS class. You can make this
// CSS class whatever you want. In this example, any component inside of an element with
// `.unicorn-dark-theme` will be affected by this alternate dark theme instead of the default theme.
//

@mixin spotty-theme($theme) {
  // Extract whichever individual palettes you need from the theme.
  $primary: map-get($theme, primary);
  $accent: map-get($theme, accent);

  .dark-theme .transparent-card.mat-card {
    background-color: rgba(24, 24, 24, 0.8) !important;
  }

}

@include spotty-theme($theme);

.dark-theme {
  @include angular-material-theme($dark-theme);
  @include spotty-theme($dark-theme);
}
